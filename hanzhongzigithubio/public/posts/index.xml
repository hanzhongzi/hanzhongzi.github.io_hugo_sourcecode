<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 瀚中子的个人网站</title>
    <link>https://hanzhongzi.github.io/posts/</link>
    <description>Recent content in Posts on 瀚中子的个人网站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 29 Dec 2023 18:48:55 +0800</lastBuildDate>
    <atom:link href="https://hanzhongzi.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ProxySQL 一篇文章搞定</title>
      <link>https://hanzhongzi.github.io/post/proxysql/</link>
      <pubDate>Fri, 29 Dec 2023 18:48:55 +0800</pubDate>
      <guid>https://hanzhongzi.github.io/post/proxysql/</guid>
      <description>ProxySql.md&#xA;ProxySQL 编写人 编写时间 编写说明 章瀚中 2020-9-12 接上一篇Mysql5.7主从搭建一起观看较佳 简单介绍: ProxySQL 是基于 MySQL 的一款开源的中间件的产品，是一个灵活的 MySQL 代理层，可以实现读写分离，支持 Query 路由功能，支持动态指定某个 SQL 进行缓存，支持动态加载（无需重启 ProxySQL 服务），故障切换和一些 SQL 的过滤功能。&#xA;github地址：https://github.com/sysown/proxysql/releases&#xA;官方文档: https://proxysql.com/documentation/&#xA;下载与安装 Ubuntu 下载 wget https://github.com/sysown/proxysql/releases/download/v2.0.14/proxysql_2.0.14-dbg-ubuntu16_amd64.deb 安装 dpkg -i proxysql_2.0.14-dbg-ubuntu16_amd64.deb&#xA;Centos8 下载 wget https://github.com/sysown/proxysql/releases/download/v2.0.14/proxysql-2.0.14-1-dbg-centos8.x86_64.rpm&#xA;安装 yum -y install proxysql-2.0.14-1-centos8.x86_64.rpm&#xA;centos7 : https://github.com/sysown/proxysql/releases/download/v2.0.14/proxysql-2.0.14-1-centos7.x86_64.rpm&#xA;启动 启动：systemctl restart proxysql&#xA;停止: systemctl stop proxysql&#xA;默认监听 6032 和 6033 端口,6032 是 ProxySQL 的管理端口号，6033是对外服务的端口号 ProxySQL 的用户名和密码都是默认的 admin。&#xA;登录 需要有mysql的客户端&#xA;[root@localhost proxysql]# mysql -u admin -padmin -h 127.</description>
    </item>
    <item>
      <title>Etcd</title>
      <link>https://hanzhongzi.github.io/article/175/</link>
      <pubDate>Fri, 29 Dec 2023 18:11:31 +0800</pubDate>
      <guid>https://hanzhongzi.github.io/article/175/</guid>
      <description>etcd.md&#xA;etcd 它的应用场景相当广泛，从服务发现到分布式锁，从配置存储到分布式协调等等。&#xA;etcd 已经成为了云原生和分布式系统的存储基石。&#xA;另外，etcd 作为最热门的云原生存储之一，在腾讯、阿里、Google、AWS、美团、字节跳动、拼多多、Shopee、明源云等公司都有大量的应用，覆盖的业务可不仅仅是 Kubernetes 相关的各类容器产品，更有视频、推荐、安全、游戏、存储、集群调度等核心业务。&#xA;etcd Watch 机制能保证事件不丢吗？（原理类） 哪些因素会导致你的集群 Leader 发生切换? （稳定性类） 为什么基于 Raft 实现的 etcd 还可能会出现数据不一致？（一致性类） 为什么你删除了大量数据，db 大小不减少？为何 etcd 社区建议 db 大小不要超过 8G？（db 大小类） 为什么集群各节点磁盘 I/O 延时很低，写请求也会超时？（延时类） 为什么你只存储了 1 个几百 KB 的 key/value， etcd 进程却可能耗费数 G 内存? （内存类） 当你在一个 namespace 下创建了数万个 Pod/CRD 资源时，同时频繁通过标签去查询指定 Pod/CRD 资源时，APIServer 和 etcd 为什么扛不住?（最佳实践类） 思维导图&#xA;![](./img/etcd 思维导图.webp)&#xA;首先，你能知道什么是 etcd，了解它的基本读写原理、核心特性和能解决什么问题。 然后，在使用 etcd 解决各类业务场景需求时，能独立判断 etcd 是否适合你的业务场景，并能设计出良好的存储结构，避免 expensive request。 其次，在使用 Kubernetes 的过程中，你能清晰地知道你的每个操作背后的 etcd 是如何工作的，并遵循 Kubernetes/etcd 最佳实践，让你的 Kubernetes 集群跑得更快更稳。 接着，在运维 etcd 集群的时候，你能知道 etcd 集群核心监控指标，了解常见的坑，制定良好的巡检、监控策略，及时发现、规避问题，避免事故的产生。 最后，当你遇到 etcd 问题时，能自己分析为什么会出现这样的错误，并知道如何解决，甚至给社区提 PR 优化，做到知其然知其所以然。 基础篇 学习目标</description>
    </item>
    <item>
      <title>我又回来啦</title>
      <link>https://hanzhongzi.github.io/posts/hugo_first/</link>
      <pubDate>Mon, 25 Dec 2023 17:57:29 +0800</pubDate>
      <guid>https://hanzhongzi.github.io/posts/hugo_first/</guid>
      <description>云主机忘记续费回收了,,,看来还是免费的香。。。</description>
    </item>
    <item>
      <title>Ansible 一片文章全搞定</title>
      <link>https://hanzhongzi.github.io/posts/ansible/</link>
      <pubDate>Wed, 17 Jul 2019 23:02:42 +0800</pubDate>
      <guid>https://hanzhongzi.github.io/posts/ansible/</guid>
      <description>Ansible 一篇搞定，快速学习&#xA;一、特点 模块化： 调用特定的模块，完成特定的内容 使用 Paramiko(Python对于ssh的实现)，PyYAML,Jinja2(模板语言) 三个关键模块 支持自定义模块，可以使用任何语言编写 基于Python实现 不是简单，基于Python和SSH,无agent，无需代理，不依赖PKI(无需SSL) 安全，基于OpenSSH 幂等性：一个任务执行一遍和N边结果是一样的（要注意代码逻辑） 支持playbook编排任务，YAML格式，编排任务，支持丰富的数据机构 较强大的role的多层解决方案 二、架构 用户/PLAYBOOK =&amp;gt; INVENTORY/API/MODULES/PLUGINS =&amp;gt; HOSTS/NETWORK INVEMTORY: Ansible管理主机的清单 /etc/ansible/hosts MODULES: Ansible执行命令的功能模块、多数为内置核心模块，也可以自定义 PLUGINS: 模块功能的补充，如连接类型插件、循环插件、变量插件、过滤插件等 API: 供第三方程序调用的应用程序接口 用户直接使用命令或者使用 Playbook 或者 调用API 去远程主机执行命令 三、注意事项 执行ansible的主机一般称为主控端，中控，master或堡垒机 主控段python需要在2.6或以上 被控端python版本小鱼2.4的需要安装 python-simplejson windows不能作为主控 四、安装 epel源rpm包安装 sudo yum -y install epel-release &amp;amp;&amp;amp; sudo yum -y install ansible&#xA;官方其他安装方式&#xA;查看安装版本和命令&#xA;ansible --version ansible 2.9.27 config file = /etc/ansible/ansible.cfg configured module search path = [u&amp;#39;/root/.ansible/plugins/modules&amp;#39;, u&amp;#39;/usr/share/ansible/plugins/modules&amp;#39;] ansible python module location = /usr/lib/python2.</description>
    </item>
  </channel>
</rss>
